$resolutions: (
	lg: (
		lg-xsW: 100%,
		lg-xsH: 100%,
		lg-smW: 100%, 
		lg-smH: 100%, 
		lg-mdW: 50%, 
		lg-mdH: 50%
	), 
	md: (
		md-xsW: 100%,
		md-xsH: 100%,
		md-smW: 50%,
		md-smH: 50%,
		md-mdW: 33.33%,
		md-mdH: 33.33%
	),
	sm: (
		sm-xsW: 100%,
		sm-xsH: 100%,
		sm-smW: 50%,
		sm-smH: 50%,
		sm-mdW: 25%,
		sm-mdH: 25%
	),
	long: (
		long-xsW: 100%,
		long-xsH: 50%,
		long-smW: 100%,
		long-smH: 50%,
		long-mdW: 50%,
		long-mdH: 25%
	),
	long-taller: (
		long-taller-xsW: 100%,
		long-taller-xsH: 50%,
		long-taller-smW: 100%,
		long-taller-smH: 50%,
		long-taller-mdW: 50%,
		long-taller-mdH: 30%
	),
	longest: (
		longest-xsW: 100%,
		longest-xsH: 35%,
		longest-smW: 100%,
		longest-smH: 35%,
		longest-mdW: 100%,
		longest-mdH: 35%
	),
	tall: (
		tall-xsW: 100%,
		tall-xsH: 100%,
		tall-smW: 50%,
		tall-smH: 100%,
		tall-mdW: 25%,
		tall-mdH: 50%
	),
	sm-indented: (
		sm-indented-xsW: 100%,
		sm-indented-xsH: 100%,
		sm-indented-smW: 50%,
		sm-indented-smH: 50%,
		sm-indented-mdW: 50%,
		sm-indented-mdH: 50%
	)
) !default;


%block-basic {
	position: relative;
	box-sizing: border-box;
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
}

%basic-popup {
	position: relative;
	cursor: pointer;

	&:before {
		position: absolute; 
		top: 50%;
		left: 50%;
		transition: all 0.2s ease-in;
		transition-delay: 0.3s;
	}

	&:after {
		display: block;
		position: absolute;
		content: "";
		transition: all 0.2s ease-in;
		transition-delay: 0.1s;
		z-index: 10;
	}

}

@each $type, $grids, $num in $resolutions {
	.#{$type} {
		float: left;
		outline: none; 
		@extend %block-basic;

		@at-root .blocks__has-spacing & {
			background-position: center;
			background-size: auto;
			background-color: cl("white");
			border-bottom: solid 10px cl("grey-light");
			@include bp("md+") { 
				border: solid 15px cl("grey-light");
			}
			&__is-intro { background: none; }
		}

		// Hover state on popup image
		&.popup-image {
			// Basic popup 
			@extend %basic-popup;

			// Effect prepared
			@extend .icon-plus;

			&:before {
				font-size: 50px; 
				color: cl("grey-text");
				z-index: 11;
				width: 50px;
				height: 50px;
				margin: -25px 0 0 -25px;
				opacity: 0;
			}

			&:after {
				width: 90%;
				height: 90%;
				top: 5%;
				left: 5%;
				background: rgba(255, 255, 255, 0.8);
				opacity: 0;
			}
		
			&:hover {
				&:before, &:after { 
					opacity: 1;
				}
			}
		}

		@include bp("xs") {
			width: map-get-deep($resolutions, "#{$type}", "#{$type}-xsW");
			padding-bottom: map-get-deep($resolutions, "#{$type}", "#{$type}-xsH");
		}

		@include bp("sm") {
			width: map-get-deep($resolutions, "#{$type}", "#{$type}-smW");
			padding-bottom: map-get-deep($resolutions, "#{$type}", "#{$type}-smH");
		}

		@include bp("md+") {
			width: map-get-deep($resolutions, "#{$type}", "#{$type}-mdW");
			padding-bottom: map-get-deep($resolutions, "#{$type}", "#{$type}-mdH");
		}


		// TEMPORARY: refactor - remove as soon as theming ready.
		&__text {
			position: relative;
			overflow: hidden;

			// this is temp: background & color based on themeing
			background: #ac8940;
			color: #fff;

			> div, > p {
				@include font-scaling(1em, 1.375em);
				line-height: 1.45;
				padding: map-get($gutters, "sm");
				margin: 0;

				a { 
					color: cl("white");
					border-bottom: solid 1px rgba(255, 255, 255, 0.5); 
				}

				@include bp("sm+") {
					position: absolute;
					top: 0;
					left: 0;
					padding: map-get($gutters, "md") map-get($gutters, "sm");
				}
			}
		}
		// TEMPORARY: refactor

		// Future proof text
		&__is-text {
			position: relative;
			overflow: hidden;

			@include bp("sm-") {
				padding-bottom: 0;
			}

			> div {
				padding: map-get($gutters, "sm");
				margin: 0;

				a { @extend %arrow-red-left; }

				@include bp("sm+") {
					position: absolute;
					top: 0;
					left: 0;
					padding: map-get($gutters, "md");				
				}
			}
		}
	}
}

// Hover state on popup video
.popup-video {
	// Basic popup 
	@extend %basic-popup;

	// Effect prepared
	@extend .icon-play;

	&:before {
		font-size: 20px; 
		color: cl("white");
		z-index: 11;
		width: 20px;
		height: 20px;
		margin: -10px 0 0 -6px;
	}
	
	&:after {
		width: 50px;
		height: 50px;
		top: 50%;
		left: 50%;
		margin: -25px 0 0 -25px;
		border-radius: 50%;
		background: rgba(0, 0, 0, 0.4);
	}

	&:hover {
		transition: filter 0.2s ease-in-out;
		-webkit-filter: grayscale(100%);
		filter: grayscale(100%);

		&:before {
			font-size: 30px; 
			width: 30px;
			height: 30px;
			margin: -15px 0 0 -10px;
		}

		&:after {
			width: 70px;
			height: 70px;
			margin: -35px 0 0 -35px;
			background: rgba(0, 0, 0, 0.8);
		}
	}
}

.blocks {
	@extend .clearfix;

	// Blocks with spacing
	&__has-spacing {
		@include bp("sm+") {
			margin-left: -10px;
			margin-right: -10px;
		}
		@include bp("md+") {
			margin-left: -15px;
			margin-right: -15px;
		}
	}

	&__label {
		position: absolute;
		left: 0;
		bottom: 0;
		color: cl("white");
		padding: 15px 20px;
		&--black { color: cl("black"); }
		&--white { color: cl("white"); }
	}

	// Blocks on homepage
	&__intro {
		@extend .clearfix;

		&__with-content {
			position: relative;

			@include bp("md-") {
				padding-bottom: 0; 
			}
			&__text {
				p { @include font-scaling(1em, 1.12em); }

				> div {
					padding: map-get($gutters, "md");

					@include bp("md+") { 
						position: absolute;
						top: 50%;
						transform: translateY(-50%);
						padding-left: 0;
					}
				}
				
				@include bp("md+") {
					width: 100%;
					position: absolute;
					top: 0;
					height: 50%;
					left: 0;
				}
			}

			&__label {
				position: absolute;
				left: 0;
				bottom: 0;
				padding: 15px;
			}

			&__img {
				@extend %block-basic;
				@include bp("md+") {
					&.popup-image {
						position: absolute;
						bottom: 0;		
					}
					@at-root & + & { right: 0; }
				}
			}

		}
	}
	// END: Blocks on homepage
}
