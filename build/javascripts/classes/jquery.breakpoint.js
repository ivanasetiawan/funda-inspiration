!function(i,t){function e(t,e){this.$element=i(t),this.options=i.extend({},s,e),this._defaults=s,this._name=n,this.init()}var n="breakpoint",s={breakpoints:[480,768,1160],label:["XS","SM","MD","LG"],fireOnInit:!0};e.prototype={init:function(){console.log("init plugin "+this._name),this.orientation=this.getOrientation(),this.currentView=!1,this.addEventListeners(),this.options.fireOnInit&&this.handleWindowResize()},addEventListeners:function(){i.isNumeric(this.orientation)?this.$element.bind("orientationchange",i.proxy(this,"handleOrientationChange")):this.$element.resize(i.proxy(this,"handleWindowResize")),this.$element.on("breakpoint:fire",i.proxy(this,"handleWindowResize"))},getView:function(i){for(var t=!1,e=0,n=this.options.breakpoints.length;n>e;e++)if(!t&&i<this.options.breakpoints[e])return this.options.label[e];return this.options.label[this.options.breakpoints.length]},getOrientation:function(){return t.orientation<0?Math.abs(t.orientation):!1},handleWindowResize:function(){var i=this.$element.width(),t=this.getView(i),e=this.currentView!==t;e&&this.resize(t)},handleOrientationChange:function(){this.resize(this.getView(this.$element.width()))},resize:function(i){this.currentView=i,console.log("breakpoint switch",i),this.$element.trigger("breakpoint:switch",i)}},i.fn[n]=function(t){return this.each(function(){i.data(this,"plugin_"+n)||i.data(this,"plugin_"+n,new e(this,t))})}}(jQuery,window,document);